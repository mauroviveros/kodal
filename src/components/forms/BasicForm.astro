---
import { Card } from '@components/ui';
const { pet } = Astro.props;

// Date formatter for displaying the birthdate in input:date
const formatter = new Intl.DateTimeFormat('sv-SE', {
  timeZone: 'UTC',
  year: 'numeric',
  month: '2-digit',
  day: '2-digit',
});
---

<Card>
  <h4 class="text-lg font-bold">Información Básica</h4>

  <div
    class="grid grid-cols-1 gap-4 md:grid-cols-2 [&>article]:flex [&>article]:flex-col [&>article]:gap-2"
  >
    <article class="md:col-span-2">
      <label for="name" class="text-sm">Nombre<span class="text-primary">*</span></label>
      <input type="text" name="name" id="name" value={pet.name} maxlength="25" required />
    </article>

    <article>
      <label for="species" class="text-sm">Animal<span class="text-primary">*</span></label>
      <!-- <input type="text" name="species" id="species" value={pet.species} required /> -->
      <select name="species" id="species" value={pet.species} required>
        <option value="cat">Gato</option>
        <option value="dog">Perro</option>
        <option value="other">Otro</option>
      </select>
    </article>

    <article>
      <label for="breed" class="text-sm">Raza</label>
      <input type="text" name="breed" id="breed" value={pet.breed} maxlength="25" />
    </article>

    <article>
      <label for="birthdate" class="text-sm">
        Fecha de nacimiento<span class="text-primary">*</span>
      </label>
      <input
        type="date"
        name="birthdate"
        id="birthdate"
        value={pet.birthdate && formatter.format(pet.birthdate)}
        max={formatter.format(new Date())}
        required
      />
    </article>

    <article>
      <label for="weight" class="text-sm">Peso</label>
      <div class="flex items-center gap-1">
        <input
          type="number"
          name="weight"
          id="weight"
          class="grow"
          value={pet.weight}
          min="0"
          max="99"
          step="0.1"
        />
        <span>kg</span>
      </div>
    </article>
  </div>
</Card>
