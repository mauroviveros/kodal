---
import { Button, BasicForm } from '@components';
import Layout from '@layout';
import { Icon } from 'astro-icon/components';
import { db, eq, Pet } from 'astro:db';
import { Pet as Schema } from '@types';

if (!Astro.params.id) return Astro.redirect('/404');
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const data = Schema.parse(Object.fromEntries(formData.entries()));
    await db.update(Pet).set(data).where(eq(Pet.id, Astro.params.id)).run();
    return Astro.redirect(`/${Astro.params.id}`);
  } catch (error) {
    console.log(error);
  }
}

const pet = await db.select().from(Pet).where(eq(Pet.id, Astro.params.id)).get();
if (!pet) return Astro.redirect('/404');
---

<Layout>
  <article slot="actions">
    <a href={`/${pet.id}`}>
      <Button variant="outline">
        <Icon name="lucide:arrow-left" />
        <span>Ver perfil</span>
      </Button>
    </a>
  </article>

  <hgroup class="mb-6 flex flex-col gap-2">
    <h1 class="text-3xl font-bold">
      {
        pet.name ? (
          <>
            Editar información de <span class="text-primary">{pet.name}</span>
          </>
        ) : (
          <>Crear información de tu mascota</>
        )
      }
    </h1>
    <p class="text-on-muted">Actualiza los datos de tu mascota para mantener su perfil al día.</p>
  </hgroup>

  <form method="POST" class="flex flex-col gap-6">
    <!-- <AvatarForm pet={pet} /> -->
    <BasicForm pet={pet} />

    <div class="flex gap-4">
      <Button size="lg" type="submit" class="flex-1">
        <Icon name="lucide:save" />
        {pet.name ? 'Guardar cambios' : 'Crear perfil'}
      </Button>

      {
        pet.name && (
          <a href={`/${pet.id}`} class="flex flex-1">
            <Button variant="outline" size="lg" class="flex-1" type="button">
              Cancelar
            </Button>
          </a>
        )
      }
    </div>
  </form>
</Layout>
