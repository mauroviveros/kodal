---
import Layout from '@layout';
import { Icon } from 'astro-icon/components';
import { db, eq, Pet } from 'astro:db';
import { Pet as Schema } from '@types';
import { Button, Card } from '@components/ui';
import { toInputDateValue } from '@utils';

if (!Astro.params.id) return Astro.redirect('/404');
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const data = Schema.parse(Object.fromEntries(formData.entries()));
    await db.update(Pet).set(data).where(eq(Pet.id, Astro.params.id)).run();
    return Astro.redirect(`/medal/${Astro.params.id}`);
  } catch (error) {
    console.log(error);
  }
}

const pet = await db.select().from(Pet).where(eq(Pet.id, Astro.params.id)).get();
if (!pet) return Astro.redirect('/404');
---

<Layout>
  <hgroup class="mb-6 flex flex-col gap-2">
    <h1 class="text-3xl font-bold">
      {
        pet.name ? (
          <>
            Editar información de <span class="text-primary">{pet.name}</span>
          </>
        ) : (
          <>Crear información de tu mascota</>
        )
      }
    </h1>
    <p class="text-on-muted">Actualiza los datos de tu mascota para mantener su perfil al día.</p>
  </hgroup>

  <form method="POST" class="flex flex-col gap-6">
    <!-- <AvatarForm pet={pet} /> -->
    <Card>
      <h4 class="text-lg font-bold">Información Básica</h4>

      <div
        class="grid grid-cols-1 gap-4 md:grid-cols-2 [&>article]:flex [&>article]:flex-col [&>article]:gap-2"
      >
        <fieldset class="flex flex-col gap-2 md:col-span-2">
          <label for="name" class="text-sm">Nombre<span class="text-primary">*</span></label>
          <input type="text" name="name" id="name" value={pet.name} maxlength="25" required />
        </fieldset>

        <fieldset class="flex flex-col gap-2">
          <label for="species" class="text-sm">Animal<span class="text-primary">*</span></label>
          <select name="species" id="species" required>
            {
              [
                { value: 'cat', label: 'Gato' },
                { value: 'dog', label: 'Perro' },
                { value: 'other', label: 'Otro' },
              ].map(({ value, label }) => (
                <option value={value} selected={(pet.species || 'other') === value}>
                  {label}
                </option>
              ))
            }
          </select>
        </fieldset>

        <fieldset class="flex flex-col gap-2">
          <label for="breed" class="text-sm">Raza</label>
          <input type="text" name="breed" id="breed" value={pet.breed} maxlength="25" />
        </fieldset>

        <fieldset class="flex flex-col gap-2">
          <label for="birthdate" class="text-sm">
            Fecha de nacimiento<span class="text-primary">*</span>
          </label>
          <input
            type="date"
            name="birthdate"
            id="birthdate"
            value={pet.birthdate && toInputDateValue(pet.birthdate)}
            max={toInputDateValue(new Date())}
            required
          />
        </fieldset>

        <fieldset class="flex flex-col gap-2">
          <label for="weight" class="text-sm">Peso</label>
          <div class="flex items-center gap-1">
            <input
              type="number"
              name="weight"
              id="weight"
              class="grow"
              value={pet.weight}
              min="0"
              max="99"
              step="0.1"
            />
            <span>kg</span>
          </div>
        </fieldset>
      </div>
    </Card>

    <Card>
      <h4 class="text-lg font-bold">Mensaje de Emergencia</h4>
      <fieldset class="flex flex-col">
        <label for="message" class="mb-2">Mensaje para quien encuentre a tu mascota</label>
        <textarea name="message" id="message" maxlength="250" required>{pet.message}</textarea>
        <p class="text-on-muted text-xs">
          Este mensaje aparecerá en el perfil público de tu mascota
        </p>
      </fieldset>
    </Card>

    <Card>
      <h4 class="text-lg font-bold">Información de contacto</h4>

      <fieldset class="flex flex-col">
        <label for="owner_name" class="mb-2">Nombre</label>
        <input type="text" name="owner_name" id="owner_name" value={pet.owner_name} />
      </fieldset>

      <fieldset class="flex flex-col">
        <label for="owner_phone" class="mb-2">Teléfono<span class="text-primary">*</span></label>
        <input type="tel" name="owner_phone" id="owner_phone" value={pet.owner_phone} required />
      </fieldset>

      <fieldset class="flex flex-col">
        <label for="owner_email" class="mb-2">Email<span class="text-primary">*</span></label>
        <input type="email" name="owner_email" id="owner_email" value={pet.owner_email} required />
      </fieldset>
    </Card>

    <div class="flex gap-4">
      <Button size="lg" type="submit" class="flex-1">
        <Icon name="lucide:save" />
        {pet.name ? 'Guardar' : 'Crear'}
      </Button>

      {
        pet.name && (
          <a href={`/medal/${pet.id}`} class="flex flex-1">
            <Button variant="outline" size="lg" class="flex-1" type="button">
              Cancelar
            </Button>
          </a>
        )
      }
    </div>
  </form>
</Layout>
